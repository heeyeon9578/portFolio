@font-face {
    font-family: 'TTLaundryGothicB';
    src: url('https://fastly.jsdelivr.net/gh/projectnoonnu/2403-2@1.0/TTLaundryGothicB.woff2') format('woff2');
    font-weight: 700;
    font-style: normal;
}

html, body {
    background-color: var(--background-color);
    color: var(--text-color);
    display: flex;
    justify-content: center;
    align-items: center;
    font-family: 'TTLaundryGothicB', sans-serif; /* 'TTLaundryGothicB' 폰트를 기본으로 설정하고, fallback으로 sans-serif 지정 */
    font-weight: 700; /* @font-face에서 정의한 700 weight 적용 */
}

button, div, span {
    font-family: 'TTLaundryGothicB', sans-serif; /* 'TTLaundryGothicB' 폰트를 기본으로 설정하고, fallback으로 sans-serif 지정 */
    cursor: pointer;
}

.app {
    margin-top:20px;
    background-color: var(--primary-color);
    width: 95vw;  /* Viewport width의 95% */
    display: flex;
    flex-direction: column;
    padding:10px;
    border-radius: 10px;
    justify-content: center;
    align-items: center;  /* 상단에 배치 */
    position: relative; /* 자식 요소의 위치를 지정할 때 필요 */
    overflow: visible; /* overflow 속성 확인 */
    margin-bottom: 20px;
}

.mainPage{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    margin-bottom: 100px;
}

.btns{
    margin-top: 20px;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;

}

.primaryBtn{
    margin-top: 10px;
    margin-right: 40px;  /* 각 버튼 사이에 10px의 간격을 추가 */
    width: auto;
    padding: 10px 30px;
    height: 40px;
    background-color:var(--secondary-color);
    border: none;
    border-radius:20px;
    color: var(--text-color);
    filter: drop-shadow(0px 4px 48px var(--secondary-color));
    font-size: 20px; 
}


.primaryBtn:hover{ 
    color: var(--background-color);
    background-color:var(--third-color);
    filter: drop-shadow(0px 4px 48px var(--shadow-color));
}

.profileImg{
    margin-top: 70px;
    width: 300px;
    height: 300px;
    filter: drop-shadow(0px 4px 48px var(--secondary-color));
    transition: transform 0.3s ease-in-out, filter 0.3s ease-in-out; /* 애니메이션 속성 추가 */

}

.profileImg:hover{
    transform: scale(1.1) rotate(5deg); /* 이미지를 확대하고 살짝 회전시킴 */
    filter: drop-shadow(0px 8px 48px var(--third-color)); /* 그림자를 더 강하게 */
}

.profileText{
    margin-top: 70px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.defaultFont{
    font-size: 40px;
}

.strongFont{
    font-size: 40px;
    color: var(--third-color);
}

.sticky {
    position: fixed;
    top: 100px;  /* 스크롤할 때 상단에서 20px 떨어진 곳에 고정 */
    right: 50px; /* 오른쪽에서 20px 떨어진 곳에 고정 */
    z-index: 10; /* z-index로 다른 요소와의 우선순위 설정 */
    align-self: flex-end; /* 상위 요소의 flex 영향에서 벗어남 */
}

.circle{
    width: 50px;
    height: 50px;
    background: var(--secondary-color);
    border-radius: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 10px;
}

.circle:hover{
    background: var(--third-color);
    filter: drop-shadow(0px 4px 48px var(--third-color));
    color: var(--background-color);
    transform: scale(1.1) rotate(5deg); /* 이미지를 확대하고 살짝 회전시킴 */
}

.colorPicker{
    width: 50px;
    height: 50px;
}

.download{
    margin-bottom: 100px;
}

.download:hover{
    transform: scale(1.1) rotate(5deg); /* 이미지를 확대하고 살짝 회전시킴 */
}